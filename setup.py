#!/usr/bin/env python3
"""
Setup script for the Titanic Survival Predictor project
"""

import subprocess
import sys
import os

def install_requirements():
    """Install required packages"""
    print("üì¶ Installing required packages...")
    try:
        subprocess.check_call([sys.executable, "-m", "pip", "install", "-r", "requirements.txt"])
        print("‚úÖ All packages installed successfully!")
        return True
    except subprocess.CalledProcessError:
        print("‚ùå Failed to install packages. Please install manually:")
        print("   pip install pandas numpy scikit-learn matplotlib seaborn")
        return False

def check_python_version():
    """Check if Python version is compatible"""
    if sys.version_info < (3, 7):
        print("‚ùå Python 3.7 or higher is required!")
        print(f"   Current version: {sys.version}")
        return False
    print(f"‚úÖ Python version: {sys.version}")
    return True

def main():
    """Main setup function"""
    print("üö¢" * 25)
    print("üö¢ TITANIC SURVIVAL PREDICTOR SETUP")
    print("üö¢" * 25)
    
    print("\nüîß Setting up your machine learning environment...")
    
    # Check Python version
    if not check_python_version():
        return
    
    # Install requirements
    if not install_requirements():
        return
    
    print("\nüéâ Setup complete!")
    print("\nüöÄ You can now run:")
    print("   ‚Ä¢ python titanic_predictor.py    (Complete analysis)")
    print("   ‚Ä¢ python interactive_demo.py    (Interactive demo)")
    
    print("\nüìö What's included:")
    print("   ‚Ä¢ README.md                     (Learning guide)")
    print("   ‚Ä¢ titanic_predictor.py          (Main ML pipeline)")
    print("   ‚Ä¢ interactive_demo.py           (Interactive predictor)")
    print("   ‚Ä¢ requirements.txt              (Dependencies)")
    
    print("\nüéì Happy learning!")

if __name__ == "__main__":
    main() 